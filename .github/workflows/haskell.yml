name: Build and Test
on: 
  push: {branches: ["main"]}
  pull_request:

env:
  GHC_VER: "9.10.0.20240412"
  CABAL: CABAL=wasm32-wasi-cabal --project-file=cabal-wasm.project --with-ghc=wasm32-wasi-ghc --with-ghc-pkg=wasm32-wasi-ghc-pkg --with-hsc2hs=wasm32-wasi-hsc2hs

jobs:
  build:
    name: Build (${{matrix.plan.name}})
    continue-on-error: true
    container: ghcr.io/konn/humblr/build:9.10.0.20240412
    strategy:
      matrix:
        plan: 
        - path: "cabal.project.freeze"
          name: "ghc-9.6.6"
          ghc: "9.6.6"
          is_head: false
      fail-fast: false
    env:
      project-file: cabal-wasm.project
    runs-on: ubuntu-latest
    outputs:
      benchmarks: ${{steps.list-bins.outputs.benchs}}
      tests: ${{steps.list-bins.outputs.tests}}
      artifact: "artifact-${{matrix.plan.name}}"
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{github.event.pull_request.head.sha || github.sha}}
    - name: Calculate hash keys
      uses: actions/github-script@v6
      id: cache-keys
      with:
        script: |
          const script = require('./ci/scripts/calc-cache-keys.js')
          await script({ os: "ubuntu", plan: "cabal-wasm", path: ${{toJSON(env.project-file)}}, core, glob })
    - name: Restore ~/.cabal/store
      uses: actions/cache/restore@v3
      with:
        path: ~/.cabal/store
        key: ${{steps.cache-keys.outputs.store}}
        restore-keys: ${{steps.cache-keys.outputs.store-restore}}
    - name: Restore dist-newstyle
      uses: actions/cache/restore@v3
      with:
        path: dist-newstyle
        key: ${{steps.cache-keys.outputs.dist}}
        restore-keys: ${{steps.cache-keys.outputs.dist-restore}}
    - name: cabal configure
      run: |
        ${{env.CABAL}} v2-configure --enable-tests --enable-benchmarks --enable-optimisation=2
        ${{env.CABAL}} update
    - name: Build Dependencies
      run: | 
        ${{env.CABAL}} build --only-dependencies all
    - name: Save ~/.cabal/store Cache
      uses: actions/cache/save@v3
      with:
        path: ~/.cabal/store
        key: ${{steps.cache-keys.outputs.store}}
    - name: Build All
      run: | 
        ${{env.cabal}} build all
    - name: Save dist-newstyle Cache
      uses: actions/cache/save@v3
      with:
        path: dist-newstyle
        key: ${{steps.cache-keys.outputs.dist}}

    - name: Collect binaries
      continue-on-error: true
      run: bash ./ci/scripts/collect-bins.sh "${{env.artifact-name}}"
    - name: Upload Aritracts
      uses: actions/upload-artifact@v3
      with:
        path: ${{env.artifact-name}}.tar.zst
        name: ${{env.artifact-name}}
        retention-days: 1
    - name: List Binaries
      id: list-bins
      shell: bash
      run: |
        echo "benchs=$(jq -cMnR '[inputs]' <"${{env.artifact-name}}"/benchs.list)" >>"${GITHUB_OUTPUT}"
        echo "tests=$(jq -cMnR '[inputs]' <"${{env.artifact-name}}"/tests.list)" >>"${GITHUB_OUTPUT}"

  fourmolu:
    name: Fourmolu
    runs-on: ubuntu-latest
    steps:
      # Note that you must checkout your code before running fourmolu/fourmolu-action
      - uses: actions/checkout@v2
      - uses: fourmolu/fourmolu-action@v10
        with:
          pattern: |
            **/*.hs
            !**/Setup.hs
            !**/Setup.lhs
            !dist-newstyle/**
        
  cabal-check:
    name: Cabal Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: haskell/actions/setup@v2
      with:
        cabal-version: 3.10.2.0
        ghc-version: 9.4.8
    - run: bash ./ci/scripts/cabal-check-packages.sh
